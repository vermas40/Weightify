persist: false,
create: function(input) {
return {
value: input,
text: input
}
}
});",
"$('#nselect').selectize({
delimiter: \',\',
persist: false,
create: function(input) {
return {
value: input,
text: input
}
}
});",
#"$('#mselect')[0].selectize.enable()",
#"$('#nselect')[0].selectize.disable()",
"}"
)
server <- function(input, output, session) {
observe({
print(input$mselect)
})
session$sendCustomMessage('unbind-DT', 'table')
output$table <- renderDT({
datatable(
data = df,
escape = FALSE,
editable = TRUE,
options = list(
dom='tp',
pageLength=1,
processing=F,
preDrawCallback = JS('function(){Shiny.unbindAll(this.api().table().node());}'),
drawCallback = JS(js)
)
)
})
}
shinyApp(ui = ui, server = server)
r
library(shiny)
library(DT)
ui <- fluidPage(
shinyjs::useShinyjs(),
selectizeInput(
inputId = "input",
label = "",
choices = letters[1:26],
selected = letters[1]
),
fluidRow(
DTOutput(outputId = "table"),
tags$script(HTML("Shiny.addCustomMessageHandler('unbind-DT', function(id) {
Shiny.unbindAll($('#'+id).find('table').DataTable().table().node());
})"))
)
)
df <- data.frame('a' = c(1,2), 'sel_input' = NA)
df[1,'sel_input'] <- as.character(
selectizeInput(inputId = 'mselect', choices=c('car','cars','dog'),
label=NULL, selected=NULL))
df[2,'sel_input'] <- as.character(
selectizeInput(inputId = 'nselect', choices=c('lambo','audi','merc'),
label=NULL, selected=NULL))
df['c'] <- c(3,4)
js <- c(
"function(){Shiny.bindAll(this.api().table().node());",
"  $('#mselect').selectize({
delimiter: \',\',
persist: false,
create: function(input) {
return {
value: input,
text: input
}
}
});",
"$('#nselect').selectize({
delimiter: \',\',
persist: false,
create: function(input) {
return {
value: input,
text: input
}
}
});",
#"$('#mselect')[0].selectize.enable()",
#"$('#nselect')[0].selectize.disable()",
"}"
)
server <- function(input, output, session) {
observe({
print(input$mselect)
})
session$sendCustomMessage('unbind-DT', 'table')
output$table <- renderDT({
datatable(
data = df,
escape = FALSE,
editable = TRUE,
options = list(
dom='tp',
pageLength=1,
processing=F,
preDrawCallback = JS('function(){Shiny.unbindAll(this.api().table().node());}'),
drawCallback = JS(js)
)
)
})
}
shinyApp(ui = ui, server = server)
r
library(shiny)
library(DT)
ui <- fluidPage(
shinyjs::useShinyjs(),
selectizeInput(
inputId = "input",
label = "",
choices = letters[1:26],
selected = letters[1]
),
fluidRow(
DTOutput(outputId = "table"),
tags$script(HTML("Shiny.addCustomMessageHandler('unbind-DT', function(id) {
Shiny.unbindAll($('#'+id).find('table').DataTable().table().node());
})"))
)
)
df <- data.frame('a' = c(1,2), 'sel_input' = NA)
df[1,'sel_input'] <- as.character(
selectizeInput(inputId = 'mselect', choices=c('car','cars','dog'),
label=NULL, selected=NULL))
df[2,'sel_input'] <- as.character(
selectizeInput(inputId = 'nselect', choices=c('lambo','audi','merc'),
label=NULL, selected=NULL))
df['c'] <- c(3,4)
js <- c(
"function(){Shiny.bindAll(this.api().table().node());",
"  $('#mselect').selectize({
delimiter: \',\',
persist: false,
create: function(input) {
return {
value: input,
text: input
}
}
});",
"$('#nselect').selectize({
delimiter: \',\',
persist: false,
create: function(input) {
return {
value: input,
text: input
}
}
});",
"$('#mselect')[0].selectize.enable()",
"$('#nselect')[0].selectize.enable()",
"}"
)
server <- function(input, output, session) {
observe({
print(input$mselect)
})
session$sendCustomMessage('unbind-DT', 'table')
output$table <- renderDT({
datatable(
data = df,
escape = FALSE,
editable = TRUE,
options = list(
dom='tp',
pageLength=1,
processing=F,
preDrawCallback = JS('function(){Shiny.unbindAll(this.api().table().node());}'),
drawCallback = JS(js)
)
)
})
}
shinyApp(ui = ui, server = server)
r
shiny::runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
library(shiny); runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
#appending the latest record with previous records of the user
#this appending is important since the df that is coming as argument
#only consists of the one record entered by the user
conn <- create_db_connection('weightloss.db')
weight_df <- dbReadTable(conn, 'weighing_scale')
weight_df <- weight_df %>%
pivot_wider(id_cols = c('user','date_created','date','year',
'month','week_in_yr'),
names_from='metric', values_from='value')
View(weight_df)
weight_df <- weight_df[which(weight_df['user'] == unique(df[['user']])),]
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(week_cal_data)
View(week_cal_data)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
unique(week_cal_data[['user']])
user
View(user_data)
conn <- create_db_connection(db_name)
user_data <- dbReadTable(conn,'user_performance')
View(user_data)
user_data <- user_data[which(user_data['user'] == user),]
View(user_data)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(week_cal_data)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(week_cal_data)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(week_cal_data)
View(week_cal_data)
View(week_cal_data)
View(week_cal_data)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(week_cal_data)
View(week_cal_data)
View(week_cal_data)
View(user_data)
View(user_data)
View(user_data)
View(user_data)
View(week_cal_data)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(weight_df)
View(df)
View(weight_df)
unique(df[['user']])
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(weight_df)
View(df)
View(weight_df)
View(weight_df)
View(weight_df)
View(week_cal_data)
View(last_week_cal_data)
View(week_cal_data)
View(weight_df)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(user_data)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(user_data)
conn <- create_db_connection(db_name)
db_name = 'weightloss.db'
conn <- create_db_connection(db_name)
df = dbReadTable(conn,'weighing_scale')
View(df)
df = dbReadTable(conn,'user_performance')
View(df)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(track_weight_data)
cc <- dbReadTable(conn, 'user_performance')
View(cc)
cx <- dbReadTable(conn, 'weighing_scale')
View(cx)
cc = airquality
cc['Ozone']
mean(cc['Ozone'])
mean(cc['Ozone'], na.rm=TRUE)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(weight_df)
shiny::runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(weight_df)
View(user_data)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(week_cal_data)
View(last_week_cal_data)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(user_data)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
cc <- dbReadTable(conn,'user_performance')
conn <- create_db_connection('weightloss.db')
cc <- dbReadTable(conn,'user_performance')
View(cc)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(week_cal_data)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(week_cal_data)
View(week_cal_data)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(week_cal_data)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
week_cal_data[which(is.na(week_cal_data['user']==F)),'user']
unique(week_cal_data[which(is.na(week_cal_data['user']==F)),'user'])
View(week_cal_data)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(week_cal_data)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(week_cal_data)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(week_cal_data)
View(week_cal_data)
cc <- dbReadTable(conn,'user_performance')
View(cc)
shiny::runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
library(shiny); runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
create_db_connection <- function(db_name){
conn <- dbConnect(RSQLite::SQLite(),paste0(
'~/Documents/Documents/Side Projects/myWeightLossPal/',
db_name))
return(conn)
}
conn <- create_db_connection('weightloss.db')
ck <- dbReadTable(conn, 'weighing_scale')
View(ck)
#appending the latest record with previous records of the user
#this appending is important since the df that is coming as argument
#only consists of the one record entered by the user
conn <- create_db_connection('weightloss.db')
weight_df <- dbReadTable(conn, 'weighing_scale')
weight_df <- weight_df %>%
pivot_wider(id_cols = c('user','date_created','date','year',
'month','week_in_yr'),
names_from='metric', values_from='value')
View(weight_df)
user_data <- dbReadTable(conn,'user_performance')
user_data <- user_data %>%
pivot_wider(id_cols = c('user','year','week_in_yr'),
names_from = 'metric', values_from = 'value')
View(user_data)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
View(df)
View(weight_df)
View(week_dates)
View(week_cal_data)
View(week_cal_data)
View(week_cal_data)
View(week_cal_data)
View(week_cal_data)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
shiny::runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
conn <- create_db_connection('weightloss.db')
cc <- dbReadTable(conn, 'weighing_scale')
View(cc)
#appending the latest record with previous records of the user
#this appending is important since the df that is coming as argument
#only consists of the one record entered by the user
conn <- create_db_connection('weightloss.db')
weight_df <- dbReadTable(conn, 'weighing_scale')
weight_df <- weight_df %>%
pivot_wider(id_cols = c('user','date_created','date','year',
'month','week_in_yr'),
names_from='metric', values_from='value')
View(weight_df)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
conn <- create_db_connection('weightloss.db')
weight_df <- dbReadTable(conn, 'weighing_scale')
weight_df <- weight_df %>%
pivot_wider(id_cols = c('user','date_created','date','year',
'month','week_in_yr'),
names_from='metric', values_from='value')
weight_df <- weight_df[which(weight_df['user']=='1000'),]
View(weight_df)
cc <- dbReadTable(conn, 'user_performance')
View(cc)
cc <- cc[which(cc['user']=='1000'),]
library(shiny); runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
library(shiny); runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
library(shiny); runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
library(shiny); runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
GET(url = paste0('http://127.0.0.1:5000/tdee/',
user))
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
curr_tdee
content(tdee)
content(weight_time)
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
tdee
curr_tdee
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
?b
?bold
?strong
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
paste0('<h4><b>Your current TDEE: </b></h4>', round(curr_tdee,0),
paste('<br/><h3><b>Your current weight:</b></h3>',curr_wt),
paste('<br/><h3><b>You need to eat</b></h3>', tgt_tdee,
'calories per day to reach you goal weight in',
weeks_left, 'weeks'))
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
?plotlyOutput
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
?as.formula
as.formula('~','c')
as.formula(paste0('~','c'))
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
as.formula('aa')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
?quo_name
?as.name
as.name('a')
typeof(as.name('a'))
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
library(shiny); runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
curr_tdee
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
library(shiny); runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
library(shiny); runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app/register.R')
runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
shiny::runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
shiny::runApp('Documents/Documents/Side Projects/myWeightLossPal/shiny-app')
